module.exports = {
	$schema: 'http://json.schemastore.org/eslintrc',
	env: {
		browser: true,
		node: true,
		es6: true,
		es2022: true,
		es2021: true,
	},
	globals: {
		document: 'readonly',
		navigator: 'readonly',
		window: 'readonly',
		Atomics: 'readonly',
		SharedArrayBuffer: 'readonly',
	},
	parser: '@typescript-eslint/parser',
	parserOptions: {
		project: './tsconfig.json',
		ecmaFeatures: {
			jsx: false,
			generators: false,
			objectLiteralDuplicateProperties: false,
		},
		ecmaVersion: 'latest',
		sourceType: 'module',
		warnOnUnsupportedTypeScriptVersion: true,
		jsx: false,
		requireConfigFile: false,
	},
	settings: {
		'import/resolver': {
			typescript: {},
			node: {
				extensions: ['.js', '.jsx', '.ts', '.tsx', '.ts', '.tsx', '.d.ts'],
			},
		},
		'import/extensions': ['.ts', '.tsx', '.js', '.jsx', '.tsx', '.d.ts'],
		'import/external-module-folders': ['node_modules', 'node_modules/@types'],
		'import/ignore': ['node_modules', '\\.s?css'],
		propWrapperFunctions: ['forbidExtraProps', 'exact', 'Object.freeze'],
		'import/core-modules': [],
	},
	ignorePatterns: ['**/node_modules/*', '**/out/*', '**/.next/*'],
	plugins: [
		'@shopify',
		'@typescript-eslint',
		'prettier',
		'eslint-comments',
		'unicorn',
		'promise',
		'n',
		'import',
		'sonarjs',
	],
	extends: [
		'eslint:recommended',
		'plugin:@typescript-eslint/recommended',
		'plugin:promise/recommended',
		'plugin:unicorn/recommended',
		'plugin:sonarjs/recommended',
		'plugin:prettier/recommended',
	],
	rules: {
		'@shopify/binary-assignment-parens': [0, 'always'],
		'@shopify/class-property-semi': [0],
		'@shopify/images-no-direct-imports': [0],
		'@shopify/no-ancestor-directory-import': [0],
		'@shopify/no-debugger': [2],
		'@shopify/no-fully-static-classes': [0],
		'@shopify/no-namespace-imports': [0],
		'@shopify/no-useless-computed-properties': [2],
		'@shopify/prefer-class-properties': [0],
		'@shopify/prefer-early-return': [
			2,
			{
				maximumStatements: 1,
			},
		],
		'@shopify/prefer-module-scope-constants': [2],
		'@shopify/prefer-twine': [2],
		'@shopify/restrict-full-import': [0],
		'@shopify/sinon-no-restricted-features': [0],
		'@shopify/sinon-prefer-meaningful-assertions': [0],
		'@shopify/strict-component-boundaries': [0],
		'@shopify/typescript/prefer-build-client-schema': [2],
		'@shopify/typescript/prefer-pascal-case-enums': [2],
		'@shopify/typescript/prefer-singular-enums': [2],
		'@shopify/webpack/no-unnamed-dynamic-imports': [0],
		'@typescript-eslint/adjacent-overload-signatures': [2],
		'@typescript-eslint/array-type': [
			2,
			{
				default: 'array-simple',
			},
		],
		'@typescript-eslint/await-thenable': [2],
		'@typescript-eslint/ban-ts-comment': [
			2,
			{
				'ts-expect-error': 'allow-with-description',
				minimumDescriptionLength: 4,
			},
		],
		'@typescript-eslint/ban-tslint-comment': [2],
		'@typescript-eslint/ban-types': [
			2,
			{
				extendDefaults: false,
				types: {
					String: {
						message: 'Use `string` instead.',
						fixWith: 'string',
					},
					Number: {
						message: 'Use `number` instead.',
						fixWith: 'number',
					},
					Boolean: {
						message: 'Use `boolean` instead.',
						fixWith: 'boolean',
					},
					Symbol: {
						message: 'Use `symbol` instead.',
						fixWith: 'symbol',
					},
					BigInt: {
						message: 'Use `bigint` instead.',
						fixWith: 'bigint',
					},
					Object: {
						message:
							'The `Object` type is mostly the same as `unknown`. You probably want `Record<string, unknown>` instead. See https://github.com/typescript-eslint/typescript-eslint/pull/848',
						fixWith: 'Record<string, unknown>',
					},
					'{}': {
						message:
							'The `{}` type is mostly the same as `unknown`. You probably want `Record<string, unknown>` instead.',
						fixWith: 'Record<string, unknown>',
					},
					object: {
						message:
							'The `object` type is hard to use. Use `Record<string, unknown>` instead. See: https://github.com/typescript-eslint/typescript-eslint/pull/848',
						fixWith: 'Record<string, unknown>',
					},
					Function: 'Use a specific function type instead, like `() => void`.',
					'[]': "Don't use the empty array type `[]`. It only allows empty arrays. Use `SomeType[]` instead.",
					'[[]]':
						"Don't use `[[]]`. It only allows an array with a single element which is an empty array. Use `SomeType[][]` instead.",
					'[[[]]]': "Don't use `[[[]]]`. Use `SomeType[][][]` instead.",
					'[[[[]]]]': 'ur drunk ðŸ¤¡',
					'[[[[[]]]]]': 'ðŸ¦„ðŸ’¥',
				},
			},
		],
		'@typescript-eslint/brace-style': [
			0,
			'1tbs',
			{
				allowSingleLine: false,
			},
		],
		'@typescript-eslint/class-literal-property-style': [2, 'getters'],
		'@typescript-eslint/comma-dangle': [0, 'always-multiline'],
		'@typescript-eslint/comma-spacing': [
			0,
			{
				before: false,
				after: true,
			},
		],
		'@typescript-eslint/consistent-generic-constructors': [2, 'constructor'],
		'@typescript-eslint/consistent-indexed-object-style': [
			2,
			'index-signature',
		],
		'@typescript-eslint/consistent-type-assertions': [
			2,
			{
				assertionStyle: 'as',
				objectLiteralTypeAssertions: 'allow-as-parameter',
			},
		],
		'@typescript-eslint/consistent-type-definitions': [2, 'type'],
		'@typescript-eslint/consistent-type-exports': [
			2,
			{
				fixMixedExportsWithInlineTypeSpecifier: true,
			},
		],
		'@typescript-eslint/consistent-type-imports': [1],
		'@typescript-eslint/default-param-last': [2],
		'@typescript-eslint/dot-notation': [
			2,
			{
				allowKeywords: true,
				allowPattern: '',
				allowPrivateClassPropertyAccess: false,
				allowProtectedClassPropertyAccess: false,
				allowIndexSignaturePropertyAccess: false,
			},
		],
		'@typescript-eslint/explicit-function-return-type': [0],
		'@typescript-eslint/explicit-member-accessibility': [0],
		'@typescript-eslint/func-call-spacing': [0, 'never'],
		'@typescript-eslint/generic-type-naming': [0],
		'@typescript-eslint/indent': [
			0,
			'tab',
			{
				SwitchCase: 1,
				flatTernaryExpressions: false,
				offsetTernaryExpressions: false,
				ignoreComments: false,
			},
		],
		'@typescript-eslint/interface-name-prefix': [0],
		'@typescript-eslint/keyword-spacing': [
			0,
			{
				before: true,
				after: true,
				overrides: {},
			},
		],
		'@typescript-eslint/lines-between-class-members': [
			2,
			'always',
			{
				exceptAfterSingleLine: true,
			},
		],
		'@typescript-eslint/member-delimiter-style': [
			0,
			{
				multiline: {
					delimiter: 'semi',
					requireLast: true,
				},
				singleline: {
					delimiter: 'semi',
					requireLast: false,
				},
			},
		],
		'@typescript-eslint/member-naming': [0],
		'@typescript-eslint/member-ordering': [
			2,
			{
				default: [
					'signature',
					'call-signature',
					'public-static-field',
					'protected-static-field',
					'private-static-field',
					'#private-static-field',
					'public-decorated-field',
					'protected-decorated-field',
					'private-decorated-field',
					'public-instance-field',
					'protected-instance-field',
					'private-instance-field',
					'#private-instance-field',
					'public-abstract-field',
					'protected-abstract-field',
					'public-field',
					'protected-field',
					'private-field',
					'#private-field',
					'static-field',
					'instance-field',
					'abstract-field',
					'decorated-field',
					'field',
					'static-initialization',
					'public-constructor',
					'protected-constructor',
					'private-constructor',
					'constructor',
					'public-static-get',
					'protected-static-get',
					'private-static-get',
					'#private-static-get',
					'public-decorated-get',
					'protected-decorated-get',
					'private-decorated-get',
					'public-instance-get',
					'protected-instance-get',
					'private-instance-get',
					'#private-instance-get',
					'public-abstract-get',
					'protected-abstract-get',
					'public-get',
					'protected-get',
					'private-get',
					'#private-get',
					'static-get',
					'instance-get',
					'abstract-get',
					'decorated-get',
					'get',
					'public-static-set',
					'protected-static-set',
					'private-static-set',
					'#private-static-set',
					'public-decorated-set',
					'protected-decorated-set',
					'private-decorated-set',
					'public-instance-set',
					'protected-instance-set',
					'private-instance-set',
					'#private-instance-set',
					'public-abstract-set',
					'protected-abstract-set',
					'public-set',
					'protected-set',
					'private-set',
					'#private-set',
					'static-set',
					'instance-set',
					'abstract-set',
					'decorated-set',
					'set',
					'public-static-method',
					'protected-static-method',
					'private-static-method',
					'#private-static-method',
					'public-decorated-method',
					'protected-decorated-method',
					'private-decorated-method',
					'public-instance-method',
					'protected-instance-method',
					'private-instance-method',
					'#private-instance-method',
					'public-abstract-method',
					'protected-abstract-method',
					'public-method',
					'protected-method',
					'private-method',
					'#private-method',
					'static-method',
					'instance-method',
					'abstract-method',
					'decorated-method',
					'method',
				],
			},
		],
		'@typescript-eslint/naming-convention': [
			1,
			{
				selector: 'function',
				format: ['PascalCase', 'camelCase'],
			},
		],
		'@typescript-eslint/no-array-constructor': [2],
		'@typescript-eslint/no-base-to-string': [2],
		'@typescript-eslint/no-confusing-void-expression': [2],
		'@typescript-eslint/no-dupe-class-members': [2],
		'@typescript-eslint/no-duplicate-enum-values': [2],
		'@typescript-eslint/no-dynamic-delete': [2],
		'@typescript-eslint/no-empty-function': [
			2,
			{
				allow: ['arrowFunctions', 'functions', 'methods'],
			},
		],
		'@typescript-eslint/no-empty-interface': [
			2,
			{
				allowSingleExtends: true,
			},
		],
		'@typescript-eslint/no-explicit-any': [0],
		'@typescript-eslint/no-extra-non-null-assertion': [2],
		'@typescript-eslint/no-extra-parens': [
			0,
			'all',
			{
				conditionalAssign: true,
				nestedBinaryExpressions: false,
				returnAssign: false,
				ignoreJSX: 'all',
				enforceForArrowConditionals: false,
			},
		],
		'@typescript-eslint/no-extra-semi': [0],
		'@typescript-eslint/no-extraneous-class': [
			1,
			{
				allowConstructorOnly: false,
				allowEmpty: false,
				allowStaticOnly: false,
				allowWithDecorator: true,
			},
		],
		'@typescript-eslint/no-floating-promises': [
			2,
			{
				ignoreVoid: true,
				ignoreIIFE: true,
			},
		],
		'@typescript-eslint/no-for-in-array': [2],
		'@typescript-eslint/no-implicit-any-catch': [2],
		'@typescript-eslint/no-implied-eval': [2],
		'@typescript-eslint/no-inferrable-types': [
			2,
			{
				ignoreParameters: false,
				ignoreProperties: false,
			},
		],
		'@typescript-eslint/no-invalid-void-type': [2],
		'@typescript-eslint/no-loop-func': [2],
		'@typescript-eslint/no-loss-of-precision': [2],
		'@typescript-eslint/no-magic-numbers': [
			0,
			{
				ignore: [],
				ignoreArrayIndexes: true,
				enforceConst: true,
				detectObjects: false,
			},
		],
		'@typescript-eslint/no-meaningless-void-operator': [2],
		'@typescript-eslint/no-misused-new': [2],
		'@typescript-eslint/no-misused-promises': [
			2,
			{
				checksVoidReturn: {
					arguments: false,
					attributes: false,
				},
			},
		],
		'@typescript-eslint/no-namespace': [
			2,
			{
				allowDeclarations: false,
				allowDefinitionFiles: false,
			},
		],
		'@typescript-eslint/no-non-null-asserted-nullish-coalescing': [2],
		'@typescript-eslint/no-non-null-asserted-optional-chain': [2],
		'@typescript-eslint/no-non-null-assertion': [0],
		'@typescript-eslint/no-parameter-properties': [0],
		'@typescript-eslint/no-redeclare': [2],
		'@typescript-eslint/no-redundant-type-constituents': [0],
		'@typescript-eslint/no-require-imports': [2],
		'@typescript-eslint/no-restricted-imports': [
			2,
			[
				2,
				'domain',
				'freelist',
				'smalloc',
				'punycode',
				'sys',
				'querystring',
				'colors',
			],
		],
		'@typescript-eslint/no-shadow': [0],
		'@typescript-eslint/no-this-alias': [
			2,
			{
				allowDestructuring: true,
			},
		],
		'@typescript-eslint/no-throw-literal': [
			2,
			{
				allowThrowingUnknown: true,
				allowThrowingAny: false,
			},
		],
		'@typescript-eslint/no-type-alias': [0],
		'@typescript-eslint/no-unnecessary-boolean-literal-compare': [2],
		'@typescript-eslint/no-unnecessary-condition': [0],
		'@typescript-eslint/no-unnecessary-qualifier': [2],
		'@typescript-eslint/no-unnecessary-type-arguments': [2],
		'@typescript-eslint/no-unnecessary-type-assertion': [2],
		'@typescript-eslint/no-unnecessary-type-constraint': [2],
		'@typescript-eslint/no-unsafe-argument': [2],
		'@typescript-eslint/no-unsafe-assignment': [1],
		'@typescript-eslint/no-unsafe-call': [1],
		'@typescript-eslint/no-unsafe-member-access': [1],
		'@typescript-eslint/no-unsafe-return': [1],
		'@typescript-eslint/no-unused-expressions': [
			2,
			{
				allowShortCircuit: false,
				allowTernary: false,
				allowTaggedTemplates: false,
				enforceForJSX: false,
			},
		],
		'@typescript-eslint/no-unused-vars': [
			2,
			{
				vars: 'all',
				args: 'after-used',
				ignoreRestSiblings: true,
			},
		],
		'@typescript-eslint/no-use-before-define': [
			2,
			{
				functions: true,
				classes: true,
				variables: true,
			},
		],
		'@typescript-eslint/no-useless-constructor': [2],
		'@typescript-eslint/no-useless-empty-export': [2],
		'@typescript-eslint/no-var-requires': [2],
		'@typescript-eslint/non-nullable-type-assertion-style': [2],
		'@typescript-eslint/object-curly-spacing': [0, 'never'],
		'@typescript-eslint/padding-line-between-statements': [
			2,
			{
				blankLine: 'always',
				prev: 'multiline-block-like',
				next: '*',
			},
		],
		'@typescript-eslint/parameter-properties': [
			2,
			{
				prefer: 'parameter-property',
			},
		],
		'@typescript-eslint/prefer-as-const': [2],
		'@typescript-eslint/prefer-for-of': [2],
		'@typescript-eslint/prefer-function-type': [2],
		'@typescript-eslint/prefer-includes': [2],
		'@typescript-eslint/prefer-literal-enum-member': [2],
		'@typescript-eslint/prefer-namespace-keyword': [2],
		'@typescript-eslint/prefer-nullish-coalescing': [
			2,
			{
				ignoreTernaryTests: false,
				ignoreConditionalTests: true,
				ignoreMixedLogicalExpressions: true,
			},
		],
		'@typescript-eslint/prefer-optional-chain': [2],
		'@typescript-eslint/prefer-readonly': [
			2,
			{
				onlyInlineLambdas: false,
			},
		],
		'@typescript-eslint/prefer-reduce-type-parameter': [2],
		'@typescript-eslint/prefer-regexp-exec': [2],
		'@typescript-eslint/prefer-return-this-type': [2],
		'@typescript-eslint/prefer-string-starts-ends-with': [2],
		'@typescript-eslint/prefer-ts-expect-error': [2],
		'@typescript-eslint/promise-function-async': [2],
		'@typescript-eslint/quotes': [0, 'single'],
		'@typescript-eslint/require-array-sort-compare': [
			2,
			{
				ignoreStringArrays: true,
			},
		],
		'@typescript-eslint/require-await': [2],
		'@typescript-eslint/restrict-plus-operands': [
			2,
			{
				checkCompoundAssignments: true,
				allowAny: false,
			},
		],
		'@typescript-eslint/restrict-template-expressions': [
			1,
			{
				allowNumber: true,
			},
		],
		'@typescript-eslint/return-await': [2, 'in-try-catch'],
		'@typescript-eslint/semi': [0, 'always'],
		'@typescript-eslint/space-before-blocks': [0, 'always'],
		'@typescript-eslint/space-before-function-paren': [
			0,
			{
				anonymous: 'always',
				named: 'never',
				asyncArrow: 'always',
			},
		],
		'@typescript-eslint/space-infix-ops': [0],
		'@typescript-eslint/strict-boolean-expressions': [0],
		'@typescript-eslint/switch-exhaustiveness-check': [2],
		'@typescript-eslint/triple-slash-reference': [
			1,
			{
				path: 'never',
				types: 'never',
				lib: 'never',
			},
		],
		'@typescript-eslint/type-annotation-spacing': [0],
		'@typescript-eslint/typedef': [0],
		'@typescript-eslint/unbound-method': [
			2,
			{
				ignoreStatic: false,
			},
		],
		'@typescript-eslint/unified-signatures': [
			2,
			{
				ignoreDifferentlyNamedParameters: true,
			},
		],
		'accessor-pairs': [
			2,
			{
				getWithoutSet: false,
				setWithoutGet: true,
				enforceForClassMembers: true,
			},
		],
		'array-bracket-newline': [0, 'consistent'],
		'array-bracket-spacing': [0, 'never'],
		'array-callback-return': [
			2,
			{
				allowImplicit: true,
				checkForEach: false,
			},
		],
		'array-element-newline': [
			0,
			{
				multiline: true,
				minItems: 3,
			},
		],
		'arrow-body-style': [2, 'as-needed'],
		'arrow-parens': [0, 'always'],
		'arrow-spacing': [
			0,
			{
				before: true,
				after: true,
			},
		],
		'babel/object-curly-spacing': [0],
		'babel/quotes': [0],
		'babel/semi': [0],
		'block-scoped-var': [0],
		'block-spacing': [0, 'always'],
		'brace-style': [
			0,
			'1tbs',
			{
				allowSingleLine: true,
			},
		],
		'callback-return': [2, ['callback']],
		camelcase: [
			2,
			{
				properties: 'never',
				ignoreDestructuring: false,
				ignoreImports: false,
				ignoreGlobals: true,
			},
		],
		'capitalized-comments': [
			0,
			'never',
			{
				line: {
					ignorePattern: '.*',
					ignoreInlineComments: true,
					ignoreConsecutiveComments: true,
				},
				block: {
					ignorePattern: '.*',
					ignoreInlineComments: true,
					ignoreConsecutiveComments: true,
				},
			},
		],
		'class-methods-use-this': [
			2,
			{
				exceptMethods: [],
				enforceForClassFields: true,
			},
		],
		'comma-dangle': [
			0,
			{
				arrays: 'always-multiline',
				objects: 'always-multiline',
				imports: 'always-multiline',
				exports: 'always-multiline',
				functions: 'always-multiline',
			},
		],
		'comma-spacing': [
			0,
			{
				before: false,
				after: true,
			},
		],
		'comma-style': [0, 'last'],
		complexity: [2, 20],
		'computed-property-spacing': [0, 'never'],
		'consistent-return': [0],
		'consistent-this': [0, 'that'],
		'constructor-super': [2],
		curly: [0, 'all'],
		'default-case': [
			2,
			{
				commentPattern: '(?:)',
			},
		],
		'default-case-last': [2],
		'default-param-last': [0],
		'dot-location': [2, 'property'],
		'dot-notation': [
			0,
			{
				allowKeywords: true,
				allowPattern: '',
			},
		],
		'eol-last': [2, 'always'],
		eqeqeq: [2, 'smart'],
		'eslint-comments/disable-enable-pair': [
			1,
			{
				allowWholeFile: true,
			},
		],
		'eslint-comments/no-aggregating-enable': [2],
		'eslint-comments/no-duplicate-disable': [2],
		'eslint-comments/no-restricted-disable': [0],
		'eslint-comments/no-unlimited-disable': [2],
		'eslint-comments/no-unused-disable': [2],
		'eslint-comments/no-unused-enable': [2],
		'eslint-comments/no-use': [0],
		'flowtype/boolean-style': [0],
		'flowtype/delimiter-dangle': [0],
		'flowtype/generic-spacing': [0],
		'flowtype/object-type-curly-spacing': [0],
		'flowtype/object-type-delimiter': [0],
		'flowtype/quotes': [0],
		'flowtype/semi': [0],
		'flowtype/space-after-type-colon': [0],
		'flowtype/space-before-generic-bracket': [0],
		'flowtype/space-before-type-colon': [0],
		'flowtype/union-intersection-spacing': [0],
		'for-direction': [2],
		'func-call-spacing': [0, 'never'],
		'func-name-matching': [
			2,
			'never',
			{
				includeCommonJSModuleExports: false,
				considerPropertyDescriptor: true,
			},
		],
		'func-names': [1],
		'func-style': [
			2,
			'expression',
			{
				allowArrowFunctions: true,
			},
		],
		'function-call-argument-newline': [0, 'consistent'],
		'function-paren-newline': [0, 'consistent'],
		'generator-star': [0],
		'generator-star-spacing': [0, 'after'],
		'getter-return': [
			2,
			{
				allowImplicit: true,
			},
		],
		'global-require': [0],
		'grouped-accessor-pairs': [2, 'getBeforeSet'],
		'guard-for-in': [0],
		'handle-callback-err': [0],
		'id-blacklist': [0],
		'id-denylist': [2, 'native'],
		'id-length': [
			2,
			{
				min: 2,
				max: 30,
				properties: 'never',
				exceptions: ['_', 'i', 'j', 'k', 'x', 'y', 'z'],
			},
		],
		'id-match': [0],
		'implicit-arrow-linebreak': [0, 'beside'],
		'import/default': [2],
		'import/dynamic-import-chunkname': [
			0,
			{
				importFunctions: [],
				webpackChunknameFormat: '[0-9a-zA-Z-_/.]+',
			},
		],
		'import/export': [2],
		'import/exports-last': [0],
		'import/extensions': [
			0,
			{
				js: 'never',
				json: 'always',
				svg: 'always',
				png: 'always',
				jpg: 'always',
				ico: 'always',
				graphql: 'always',
				css: 'always',
				sass: 'always',
				scss: 'always',
				less: 'always',
				styl: 'always',
			},
		],
		'import/first': [2],
		'import/group-exports': [0],
		'import/imports-first': [0],
		'import/max-dependencies': [
			0,
			{
				max: 10,
			},
		],
		'import/named': [2],
		'import/namespace': [
			2,
			{
				allowComputed: true,
			},
		],
		'import/newline-after-import': [2],
		'import/no-absolute-path': [
			2,
			{esmodule: true, commonjs: true, amd: false},
		],
		'import/no-amd': [2],
		'import/no-anonymous-default-export': [
			2,
			{
				allowArray: false,
				allowArrowFunction: false,
				allowAnonymousClass: false,
				allowAnonymousFunction: false,
				allowLiteral: false,
				allowObject: false,
			},
		],
		'import/no-commonjs': [0],
		'import/no-cycle': [
			2,
			{
				ignoreExternal: true,
			},
		],
		'import/no-default-export': [2],
		'import/no-deprecated': [2],
		'import/no-duplicates': [2],
		'import/no-dynamic-require': [0],
		'import/no-extraneous-dependencies': [
			2,
			{
				devDependencies: [
					'test/**',
					'tests/**',
					'spec/**',
					'**/__tests__/**',
					'**/__mocks__/**',
					'test.{js,jsx}',
					'test.{ts,tsx}',
					'test-*.{js,jsx}',
					'test-*.{ts,tsx}',
					'**/*{.,_}{test,spec}.{js,jsx}',
					'**/*{.,_}{test,spec}.{ts,tsx}',
					'**/jest.config.js',
					'**/jest.config.ts',
					'**/jest.setup.js',
					'**/jest.setup.ts',
					'**/vue.config.js',
					'**/vue.config.ts',
					'**/webpack.config.js',
					'**/webpack.config.ts',
					'**/webpack.config.*.js',
					'**/webpack.config.*.ts',
					'**/rollup.config.js',
					'**/rollup.config.ts',
					'**/rollup.config.*.js',
					'**/rollup.config.*.ts',
					'**/gulpfile.js',
					'**/gulpfile.ts',
					'**/gulpfile.*.js',
					'**/gulpfile.*.ts',
					'**/Gruntfile{,.js}',
					'**/Gruntfile{,.ts}',
					'**/protractor.conf.js',
					'**/protractor.conf.ts',
					'**/protractor.conf.*.js',
					'**/protractor.conf.*.ts',
					'**/karma.conf.js',
					'**/karma.conf.ts',
					'**/.eslintrc.js',
					'**/.eslintrc.ts',
				],
				optionalDependencies: false,
			},
		],
		'import/no-import-module-exports': [
			2,
			{
				exceptions: [],
			},
		],
		'import/no-internal-modules': [
			0,
			{
				allow: [],
			},
		],
		'import/no-mutable-exports': [2],
		'import/no-named-as-default': [2],
		'import/no-named-as-default-member': [2],
		'import/no-named-default': [2],
		'import/no-named-export': [0],
		'import/no-namespace': [0],
		'import/no-nodejs-modules': [0],
		'import/no-relative-packages': [2],
		'import/no-relative-parent-imports': [0],
		'import/no-restricted-paths': [0],
		'import/no-self-import': [2],
		'import/no-unassigned-import': [
			2,
			{
				allow: [
					'**/register',
					'**/register.*',
					'**/register /**',
					'**/register /**.*',
					'**/*.css',
					'** /*.scss',
					'**/*.sass',
					'** /*.less',
				],
			},
		],
		'import/no-unresolved': [
			0,
			{
				commonjs: true,
				caseSensitive: true,
				caseSensitiveStrict: false,
			},
		],
		'import/no-unused-modules': [
			0,
			{
				ignoreExports: [],
				missingExports: true,
				unusedExports: true,
			},
		],
		'import/no-useless-path-segments': [
			2,
			{
				commonjs: true,
			},
		],
		'import/no-webpack-loader-syntax': [2],
		'import/order': [
			2,
			{
				groups: ['builtin', 'external', 'parent', 'sibling', 'index'],
				'newlines-between': 'never',
				warnOnUnassignedImports: false,
			},
		],
		'import/prefer-default-export': [0],
		'import/unambiguous': [0],
		indent: [
			0,
			2,
			{
				SwitchCase: 1,
				VariableDeclarator: 1,
				outerIIFEBody: 1,
				FunctionDeclaration: {
					parameters: 1,
					body: 1,
				},
				FunctionExpression: {
					parameters: 1,
					body: 1,
				},
				CallExpression: {
					arguments: 1,
				},
				ArrayExpression: 1,
				ObjectExpression: 1,
				ImportDeclaration: 1,
				flatTernaryExpressions: false,
				ignoredNodes: [
					'JSXElement',
					'JSXElement > *',
					'JSXAttribute',
					'JSXIdentifier',
					'JSXNamespacedName',
					'JSXMemberExpression',
					'JSXSpreadAttribute',
					'JSXExpressionContainer',
					'JSXOpeningElement',
					'JSXClosingElement',
					'JSXFragment',
					'JSXOpeningFragment',
					'JSXClosingFragment',
					'JSXText',
					'JSXEmptyExpression',
					'JSXSpreadChild',
				],
				ignoreComments: false,
				offsetTernaryExpressions: false,
			},
		],
		'indent-legacy': [
			0,
			2,
			{
				SwitchCase: 1,
				MemberExpression: 1,
			},
		],
		'init-declarations': [0, 'always'],
		'key-spacing': [
			0,
			{
				beforeColon: false,
				afterColon: true,
			},
		],
		'keyword-spacing': [
			0,
			{
				before: true,
				after: true,
				overrides: {},
			},
		],
		'line-comment-position': [
			0,
			{
				position: 'above',
			},
		],
		'linebreak-style': [0, 'unix'],
		'lines-around-comment': [
			0,
			{
				beforeBlockComment: true,
				afterBlockComment: false,
				beforeLineComment: false,
				afterLineComment: false,
				allowBlockStart: false,
				allowBlockEnd: false,
			},
		],
		'lines-around-directive': [
			2,
			{
				before: 'always',
				after: 'always',
			},
		],
		'lines-between-class-members': [
			0,
			'always',
			{
				exceptAfterSingleLine: true,
			},
		],
		'max-classes-per-file': [0, 1],
		'max-depth': [2, 4],
		'max-len': [
			2,
			120,
			4,
			{
				ignoreUrls: true,
				ignoreComments: true,
				ignoreRegExpLiterals: true,
				ignoreStrings: true,
				ignoreTemplateLiterals: true,
			},
		],
		'max-lines': [
			2,
			{
				max: 300,
				skipBlankLines: true,
				skipComments: true,
			},
		],
		'max-lines-per-function': [
			2,
			{
				max: 75,
				skipBlankLines: true,
				skipComments: true,
				IIFEs: true,
			},
		],
		'max-nested-callbacks': [2, 2],
		'max-params': [2, 5],
		'max-statements': [2, 30],
		'max-statements-per-line': [
			2,
			{
				max: 1,
			},
		],
		'multiline-comment-style': [2, 'starred-block'],
		'multiline-ternary': [0, 'always-multiline'],
		'n/file-extension-in-import': [0],
		'n/no-deprecated-api': [2],
		'n/no-mixed-requires': [
			2,
			{
				grouping: true,
				allowCall: true,
			},
		],
		'n/no-new-require': [2],
		'n/no-path-concat': [2],
		'n/no-unpublished-bin': [2],
		'n/prefer-global/buffer': [0],
		'n/prefer-global/console': [2, 'always'],
		'n/prefer-global/process': [0],
		'n/prefer-global/text-decoder': [2, 'always'],
		'n/prefer-global/text-encoder': [2, 'always'],
		'n/prefer-global/url': [2, 'always'],
		'n/prefer-global/url-search-params': [2, 'always'],
		'n/prefer-promises/dns': [2],
		'n/prefer-promises/fs': [2],
		'n/process-exit-as-throw': [2],
		'new-cap': [
			1,
			{
				newIsCap: true,
				capIsNew: false,
				properties: true,
			},
		],
		'new-parens': [2],
		'newline-after-var': [0],
		'newline-before-return': [0],
		'newline-per-chained-call': [
			0,
			{
				ignoreChainWithDepth: 3,
			},
		],
		'no-alert': [2],
		'no-array-constructor': [2],
		'no-arrow-condition': [0],
		'no-async-promise-executor': [2],
		'no-await-in-loop': [2],
		'no-bitwise': [0],
		'no-buffer-constructor': [2],
		'no-caller': [2],
		'no-case-declarations': [2],
		'no-catch-shadow': [2],
		'no-class-assign': [2],
		'no-comma-dangle': [0],
		'no-compare-neg-zero': [2],
		'no-cond-assign': [2, 'always'],
		'no-confusing-arrow': [
			0,
			{
				allowParens: true,
				onlyOneSimpleParam: false,
			},
		],
		'no-console': [
			2,
			{
				allow: ['warn', 'error'],
			},
		],
		'no-const-assign': [2],
		'no-constant-condition': [
			2,
			{
				checkLoops: false,
			},
		],
		'no-constructor-return': [2],
		'no-continue': [0],
		'no-control-regex': [2],
		'no-debugger': [2],
		'no-delete-var': [2],
		'no-div-regex': [2],
		'no-dupe-args': [2],
		'no-dupe-class-members': [2],
		'no-dupe-else-if': [2],
		'no-dupe-keys': [2],
		'no-duplicate-case': [2],
		'no-duplicate-imports': [0],
		'no-else-return': [
			2,
			{
				allowElseIf: false,
			},
		],
		'no-empty': [
			2,
			{
				allowEmptyCatch: true,
			},
		],
		'no-empty-character-class': [2],
		'no-empty-function': [
			2,
			{
				allow: ['arrowFunctions', 'functions'],
			},
		],
		'no-empty-pattern': [2],
		'no-eq-null': [0],
		'no-eval': [2],
		'no-ex-assign': [2],
		'no-extend-native': [2],
		'no-extra-bind': [2],
		'no-extra-boolean-cast': [2],
		'no-extra-label': [2],
		'no-extra-parens': [
			0,
			'all',
			{
				conditionalAssign: true,
				nestedBinaryExpressions: false,
				returnAssign: false,
				ignoreJSX: 'all',
				enforceForArrowConditionals: false,
			},
		],
		'no-extra-semi': [2],
		'no-fallthrough': [2],
		'no-floating-decimal': [2],
		'no-func-assign': [2],
		'no-global-assign': [
			2,
			{
				exceptions: [],
			},
		],
		'no-implicit-coercion': [
			2,
			{
				boolean: false,
				number: true,
				string: true,
				disallowTemplateShorthand: false,
				allow: [],
			},
		],
		'no-implicit-globals': [2],
		'no-implied-eval': [2],
		'no-import-assign': [2],
		'no-inline-comments': [0],
		'no-inner-declarations': [2, 'functions'],
		'no-invalid-regexp': [
			2,
			{
				allowConstructorFlags: ['u', 'y'],
			},
		],
		'no-invalid-this': [2],
		'no-irregular-whitespace': [2],
		'no-iterator': [2],
		'no-label-var': [2],
		'no-labels': [
			2,
			{
				allowLoop: false,
				allowSwitch: false,
			},
		],
		'no-lone-blocks': [2],
		'no-lonely-if': [2],
		'no-loop-func': [2],
		'no-loss-of-precision': [2],
		'no-magic-numbers': [
			0,
			{
				ignore: [],
				ignoreArrayIndexes: true,
				enforceConst: true,
				detectObjects: false,
			},
		],
		'no-misleading-character-class': [2],
		'no-mixed-operators': [
			'error',
			{
				groups: [
					['%', '**'],
					['%', '+'],
					['%', '-'],
					['%', '*'],
					['%', '/'],
					['/', '*'],
					['&', '|', '<<', '>>', '>>>'],
					['==', '!=', '===', '!=='],
					['&&', '||'],
				],
				allowSamePrecedence: true,
			},
		],
		'no-mixed-requires': [0, false],
		'no-mixed-spaces-and-tabs': [0],
		'no-multi-assign': [
			2,
			{
				ignoreNonDeclaration: false,
			},
		],
		'no-multi-spaces': [
			2,
			{
				ignoreEOLComments: false,
			},
		],
		'no-multi-str': [2],
		'no-multiple-empty-lines': [
			2,
			{
				max: 1,
				maxEOF: 1,
			},
		],
		'no-native-reassign': [0],
		'no-negated-condition': [2],
		'no-negated-in-lhs': [0],
		'no-nested-ternary': [0],
		'no-new': [2],
		'no-new-func': [2],
		'no-new-object': [2],
		'no-new-require': [0],
		'no-new-symbol': [2],
		'no-new-wrappers': [2],
		'no-nonoctal-decimal-escape': [2],
		'no-obj-calls': [2],
		'no-octal': [2],
		'no-octal-escape': [2],
		'no-param-reassign': [
			2,
			{
				props: true,
				ignorePropertyModificationsFor: [],
				ignorePropertyModificationsForRegex: [],
			},
		],
		'no-path-concat': [2],
		'no-plusplus': [
			2,
			{
				allowForLoopAfterthoughts: true,
			},
		],
		'no-process-env': [2],
		'no-process-exit': [2],
		'no-promise-executor-return': [2],
		'no-proto': [2],
		'no-prototype-builtins': [2],
		'no-redeclare': [2],
		'no-regex-spaces': [2],
		'no-reserved-keys': [0],
		'no-restricted-exports': [
			2,
			{
				restrictedNamedExports: ['then'],
			},
		],
		'no-restricted-globals': [
			0,
			{
				name: 'isFinite',
				message:
					'Use Number.isFinite instead https://github.com/airbnb/javascript#standard-library--isfinite',
			},
			{
				name: 'isNaN',
				message:
					'Use Number.isNaN instead https://github.com/airbnb/javascript#standard-library--isnan',
			},
			'addEventListener',
			'blur',
			'close',
			'closed',
			'confirm',
			'defaultStatus',
			'defaultstatus',
			'event',
			'external',
			'find',
			'focus',
			'frameElement',
			'frames',
			'history',
			'innerHeight',
			'innerWidth',
			'length',
			'location',
			'locationbar',
			'menubar',
			'moveBy',
			'moveTo',
			'name',
			'onblur',
			'onerror',
			'onfocus',
			'onload',
			'onresize',
			'onunload',
			'open',
			'opener',
			'opera',
			'outerHeight',
			'outerWidth',
			'pageXOffset',
			'pageYOffset',
			'parent',
			'print',
			'removeEventListener',
			'resizeBy',
			'resizeTo',
			'screen',
			'screenLeft',
			'screenTop',
			'screenX',
			'screenY',
			'scroll',
			'scrollbars',
			'scrollBy',
			'scrollTo',
			'scrollX',
			'scrollY',
			'self',
			'status',
			'statusbar',
			'stop',
			'toolbar',
			'top',
		],
		'no-restricted-imports': [
			0,
			{
				paths: [],
				patterns: [],
			},
		],
		'no-restricted-modules': [0],
		'no-restricted-properties': [
			2,
			{
				object: 'Symbol',
				property: 'for',
				message: 'Symbol.for is unshimmable',
			},
			{
				object: 'arguments',
				property: 'callee',
				message: 'arguments.callee is deprecated',
			},
			{
				property: '__defineGetter__',
				message: 'Please use Object.defineProperty instead.',
			},
			{
				property: '__defineSetter__',
				message: 'Please use Object.defineProperty instead.',
			},
		],
		'no-restricted-syntax': [
			2,
			'DebuggerStatement',
			{
				selector: 'ForInStatement',
				message:
					'for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.',
			},
			{
				selector: 'LabeledStatement',
				message:
					'Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.',
			},
			{
				selector: 'WithStatement',
				message:
					'`with` is disallowed in strict mode because it makes code impossible to predict and optimize.',
			},
		],
		'no-return-assign': [2, 'always'],
		'no-return-await': [2],
		'no-script-url': [2],
		'no-self-assign': [
			2,
			{
				props: true,
			},
		],
		'no-self-compare': [0],
		'no-sequences': [
			2,
			{
				allowInParentheses: false,
			},
		],
		'no-setter-return': [2],
		'no-shadow': [0],
		'no-shadow-restricted-names': [2],
		'no-space-before-semi': [0],
		'no-spaced-func': [0],
		'no-sparse-arrays': [2],
		'no-sync': [0],
		'no-tabs': [0],
		'no-template-curly-in-string': [2],
		'no-ternary': [0],
		'no-this-before-super': [2],
		'no-throw-literal': [2],
		'no-trailing-spaces': [
			2,
			{
				skipBlankLines: false,
				ignoreComments: false,
			},
		],
		'no-undef': [0],
		'no-undef-init': [2],
		'no-undefined': [0],
		'no-underscore-dangle': [
			0,
			{
				allow: ['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'],
				allowAfterThis: false,
				allowAfterSuper: false,
				enforceInMethodNames: true,
				allowAfterThisConstructor: false,
				allowFunctionParams: true,
				enforceInClassFields: false,
			},
		],
		'no-unexpected-multiline': [2],
		'no-unmodified-loop-condition': [2],
		'no-unneeded-ternary': [
			2,
			{
				defaultAssignment: false,
			},
		],
		'no-unreachable': [2],
		'no-unreachable-loop': [
			2,
			{
				ignore: [],
			},
		],
		'no-unsafe-finally': [2],
		'no-unsafe-negation': [
			2,
			{
				enforceForOrderingRelations: true,
			},
		],
		'no-unsafe-optional-chaining': [
			2,
			{
				disallowArithmeticOperators: true,
			},
		],

		'no-unused-labels': [2],
		'no-unused-private-class-members': [2],
		'no-unused-vars': [
			0,
			{
				vars: 'all',
				args: 'after-used',
				ignoreRestSiblings: true,
			},
		],
		'no-use-before-define': [0, 'nofunc'],
		'no-useless-backreference': [2],
		'no-useless-call': [2],
		'no-useless-catch': [2],
		'no-useless-computed-key': [
			2,
			{
				enforceForClassMembers: true,
			},
		],
		'no-useless-concat': [2],
		'no-useless-constructor': [2],
		'no-useless-escape': [2],
		'no-useless-rename': [
			2,
			{
				ignoreDestructuring: false,
				ignoreImport: false,
				ignoreExport: false,
			},
		],
		'no-useless-return': [2],
		'no-var': [0],
		'no-void': [
			0,
			{
				allowAsStatement: true,
			},
		],
		'no-warning-comments': [
			2,
			{
				terms: ['fixme'],
			},
		],
		'no-whitespace-before-property': [0],
		'no-with': [2],
		'no-wrap-func': [0],
		'node/no-unsupported-features/es-builtins': [0],
		'node/no-unsupported-features/es-syntax': [0],
		'nonblock-statement-body-position': [
			0,
			'beside',
			{
				overrides: {},
			},
		],
		'object-curly-newline': [
			0,
			{
				ObjectExpression: {
					minProperties: 4,
					multiline: true,
					consistent: true,
				},
				ObjectPattern: {
					minProperties: 4,
					multiline: true,
					consistent: true,
				},
				ImportDeclaration: {
					minProperties: 4,
					multiline: true,
					consistent: true,
				},
				ExportDeclaration: {
					minProperties: 4,
					multiline: true,
					consistent: true,
				},
			},
		],
		'object-curly-spacing': [0, 'never'],
		'object-property-newline': [
			0,
			{
				allowAllPropertiesOnSameLine: true,
				allowMultiplePropertiesPerLine: false,
			},
		],
		'object-shorthand': [2, 'always'],
		'one-var': [0, 'never'],
		'one-var-declaration-per-line': [2, 'initializations'],
		'operator-assignment': [0, 'always'],
		'operator-linebreak': [
			0,
			'after',
			{
				overrides: {
					'?': 'before',
					':': 'before',
				},
			},
		],
		'padded-blocks': [
			0,
			{
				blocks: 'never',
				classes: 'never',
				switches: 'never',
			},
			{
				allowSingleLineBlocks: true,
			},
		],
		'padding-line-between-statements': [
			0,
			{
				blankLine: 'always',
				prev: 'directive',
				next: '*',
			},
			{
				blankLine: 'any',
				prev: 'directive',
				next: 'directive',
			},
		],
		'prefer-arrow-callback': [
			2,
			{
				allowNamedFunctions: true,
				allowUnboundThis: true,
			},
		],
		'prefer-const': [
			0,
			{
				destructuring: 'any',
				ignoreReadBeforeAssign: true,
			},
		],
		'prefer-destructuring': [
			0,
			{
				VariableDeclarator: {
					array: false,
					object: true,
				},
				AssignmentExpression: {
					array: true,
					object: true,
				},
			},
			{
				enforceForRenamedProperties: false,
			},
		],
		'prefer-exponentiation-operator': [0],
		'prefer-named-capture-group': [0],
		'prefer-numeric-literals': [0],
		'prefer-object-has-own': [0],
		'prefer-object-spread': [0],
		'prefer-promise-reject-errors': [
			2,
			{
				allowEmptyReject: true,
			},
		],
		'prefer-reflect': [0],
		'prefer-regex-literals': [
			2,
			{
				disallowRedundantWrapping: true,
			},
		],
		'prefer-rest-params': [0],
		'prefer-spread': [0],
		'prefer-template': [0],
		'prettier/prettier': [2],
		'promise/always-catch': [0],
		'promise/always-return': [
			2,
			{
				ignoreLastCallback: true,
			},
		],
		'promise/avoid-new': [0],
		'promise/catch-or-return': [2],
		'promise/no-callback-in-promise': [1],
		'promise/no-native': [0],
		'promise/no-nesting': [1],
		'promise/no-new-statics': [2],
		'promise/no-promise-in-callback': [1],
		'promise/no-return-in-finally': [1],
		'promise/no-return-wrap': [2],
		'promise/param-names': [2],
		'promise/prefer-await-to-callbacks': [0],
		'promise/prefer-await-to-then': [0],
		'promise/valid-params': [1],
		'quote-props': [
			2,
			'as-needed',
			{
				keywords: true,
			},
		],
		quotes: [2, 'single', 'avoid-escape'],
		radix: [2],
		'require-atomic-updates': [
			2,
			{
				allowProperties: true,
			},
		],
		'require-await': [0],
		'require-jsdoc': [0],
		'require-unicode-regexp': [0],
		'require-yield': [2],
		'rest-spread-spacing': [2, 'never'],
		semi: [2, 'always'],
		'semi-spacing': [
			2,
			{
				before: false,
				after: true,
			},
		],
		'semi-style': [2, 'last'],
		'sonarjs/no-inverted-boolean-check': [2],
		'sonarjs/elseif-without-else': [0],
		'sort-imports': [
			0,
			{
				ignoreCase: false,
				ignoreDeclarationSort: false,
				ignoreMemberSort: false,
				memberSyntaxSortOrder: ['none', 'all', 'multiple', 'single'],
			},
		],
		'sort-keys': [
			0,
			'asc',
			{
				caseSensitive: false,
				natural: true,
			},
		],
		'sort-vars': [0],
		'space-after-function-name': [0],
		'space-after-keywords': [0],
		'space-before-blocks': [0, 'always'],
		'space-before-function-paren': [
			0,
			{
				anonymous: 'never',
				named: 'never',
				asyncArrow: 'always',
			},
		],
		'space-before-function-parentheses': [0],
		'space-before-keywords': [0],
		'space-in-brackets': [0],
		'space-in-parens': [0, 'never'],
		'space-infix-ops': [0],
		'space-return-throw-case': [0],
		'space-unary-ops': [
			0,
			{
				words: true,
				nonwords: false,
			},
		],
		'space-unary-word-ops': [0],
		'spaced-comment': [
			2,
			'always',
			{
				markers: ['='],
			},
		],
		strict: [2, 'global'],
		'switch-colon-spacing': [
			0,
			{
				after: true,
				before: false,
			},
		],
		'symbol-description': [2],
		'template-curly-spacing': [0, 'never'],
		'template-tag-spacing': [0, 'never'],
		'unicode-bom': [2, 'never'],
		'unicorn/better-regex': [
			2,
			{
				sortCharacterClasses: false,
			},
		],
		'unicorn/catch-error-name': [2],
		'unicorn/consistent-destructuring': [0],
		'unicorn/consistent-function-scoping': [0],
		'unicorn/custom-error-definition': [0],
		'unicorn/empty-brace-spaces': [0],
		'unicorn/error-message': [2],
		'unicorn/escape-case': [2],
		'unicorn/expiring-todo-comments': [2],
		'unicorn/explicit-length-check': [2],
		'unicorn/filename-case': [1],
		'unicorn/import-style': [2],
		'unicorn/new-for-builtins': [2],
		'unicorn/no-abusive-eslint-disable': [2],
		'unicorn/no-array-callback-reference': [0],
		'unicorn/no-array-for-each': [2],
		'unicorn/no-array-method-this-argument': [0],
		'unicorn/no-array-push-push': [2],
		'unicorn/no-array-reduce': [0],
		'unicorn/no-await-expression-member': [2],
		'unicorn/no-console-spaces': [2],
		'unicorn/no-document-cookie': [2],
		'unicorn/no-empty-file': [2],
		'unicorn/no-for-loop': [2],
		'unicorn/no-hex-escape': [2],
		'unicorn/no-instanceof-array': [2],
		'unicorn/no-invalid-remove-event-listener': [2],
		'unicorn/no-keyword-prefix': [0],
		'unicorn/no-lonely-if': [2],
		'unicorn/no-nested-ternary': [0],
		'unicorn/no-new-array': [1],
		'unicorn/no-new-buffer': [2],
		'unicorn/no-null': [0],
		'unicorn/no-object-as-default-parameter': [2],
		'unicorn/no-process-exit': [2],
		'unicorn/no-static-only-class': [2],
		'unicorn/no-thenable': [0],
		'unicorn/no-this-assignment': [2],
		'unicorn/no-unnecessary-await': [2],
		'unicorn/no-unreadable-array-destructuring': [2],
		'unicorn/no-unreadable-iife': [2],
		'unicorn/no-unsafe-regex': [0],
		'unicorn/no-unused-properties': [0],
		'unicorn/no-useless-fallback-in-spread': [2],
		'unicorn/no-useless-length-check': [2],
		'unicorn/no-useless-promise-resolve-reject': [2],
		'unicorn/no-useless-spread': [2],
		'unicorn/no-useless-switch-case': [2],
		'unicorn/no-useless-undefined': [0],
		'unicorn/no-zero-fractions': [2],
		'unicorn/number-literal-case': [0],
		'unicorn/numeric-separators-style': [2],
		'unicorn/prefer-add-event-listener': [2],
		'unicorn/prefer-array-find': [2],
		'unicorn/prefer-array-flat': [2],
		'unicorn/prefer-array-flat-map': [2],
		'unicorn/prefer-array-index-of': [2],
		'unicorn/prefer-array-some': [2],
		'unicorn/prefer-at': [0],
		'unicorn/prefer-code-point': [2],
		'unicorn/prefer-date-now': [2],
		'unicorn/prefer-default-parameters': [2],
		'unicorn/prefer-dom-node-append': [2],
		'unicorn/prefer-dom-node-dataset': [2],
		'unicorn/prefer-dom-node-remove': [2],
		'unicorn/prefer-dom-node-text-content': [2],
		'unicorn/prefer-event-target': [0],
		'unicorn/prefer-export-from': [2],
		'unicorn/prefer-includes': [2],
		'unicorn/prefer-json-parse-buffer': [0],
		'unicorn/prefer-keyboard-event-key': [2],
		'unicorn/prefer-logical-operator-over-ternary': [2],
		'unicorn/prefer-math-trunc': [2],
		'unicorn/prefer-modern-dom-apis': [2],
		'unicorn/prefer-modern-math-apis': [2],
		'unicorn/prefer-module': [0],
		'unicorn/prefer-native-coercion-functions': [0],
		'unicorn/prefer-negative-index': [2],
		'unicorn/prefer-node-protocol': [0],
		'unicorn/prefer-number-properties': [2],
		'unicorn/prefer-object-from-entries': [2],
		'unicorn/prefer-optional-catch-binding': [2],
		'unicorn/prefer-prototype-methods': [2],
		'unicorn/prefer-query-selector': [2],
		'unicorn/prefer-reflect-apply': [2],
		'unicorn/prefer-regexp-test': [2],
		'unicorn/prefer-set-has': [2],
		'unicorn/prefer-spread': [2],
		'unicorn/prefer-string-replace-all': [0],
		'unicorn/prefer-string-slice': [2],
		'unicorn/prefer-string-starts-ends-with': [2],
		'unicorn/prefer-string-trim-start-end': [2],
		'unicorn/prefer-switch': [2],
		'unicorn/prefer-ternary': [2, 'only-single-line'],
		'unicorn/prefer-top-level-await': [0],
		'unicorn/prefer-type-error': [2],
		'unicorn/prevent-abbreviations': [0],
		'unicorn/relative-url-style': [2],
		'unicorn/require-array-join-separator': [2],
		'unicorn/require-number-to-fixed-digits-argument': [2],
		'unicorn/require-post-message-target-origin': [0],
		'unicorn/string-content': [0],
		'unicorn/switch-case-braces': [2],
		'unicorn/template-indent': [
			1,
			{
				indent: '\t',
			},
		],
		'unicorn/text-encoding-identifier-case': [2],
		'unicorn/throw-new-error': [2],
		'use-isnan': [
			2,
			{
				enforceForSwitchCase: true,
				enforceForIndexOf: false,
			},
		],
		'valid-jsdoc': [0],
		'valid-typeof': [
			2,
			{
				requireStringLiterals: true,
			},
		],
		'vars-on-top': [0],
		'wrap-iife': [
			2,
			'outside',
			{
				functionPrototypeMethods: true,
			},
		],
		'wrap-regex': [0],
		'yield-star-spacing': [
			0,
			{
				before: false,
				after: true,
			},
		],
		yoda: [
			2,
			'never',
			{
				exceptRange: true,
				onlyEquality: false,
			},
		],
		'n/handle-callback-err': ['error', '^(err|error)$'],
		'n/no-exports-assign': 'error',
	},
};
